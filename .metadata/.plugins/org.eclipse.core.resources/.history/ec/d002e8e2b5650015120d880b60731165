package com.jms;

import P2PSender;

import java.util.Properties;

import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.ObjectMessage;
import javax.jms.Queue;
import javax.jms.QueueConnection;
import javax.jms.QueueConnectionFactory;
import javax.jms.QueueSession;
import javax.jms.Session;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

public class Communicator01 implements MessageListener {
	public static final String QUEUE01 = "queue/Channel02";
	public static final String QUEUE02 = "queue/Channel01";
	
	public static void main(String[] args){
System.out.println("----Entering JMS P2PSender----");
		
		// Obtain a JNDI connection
		Context initialContext = Communicator01.getInitialContext();
		System.out.println("Initial Context created..");

		// Lookup a JMS Connection factory
		QueueConnectionFactory queueConnectionFactory = (QueueConnectionFactory) initialContext
						.lookup("jms/GFQueueConnectionFactory");
		System.out.println("Lookup of Connection Factory complete..");
		
		// Looking up a JMS Queue
		Queue queue = (Queue) initialContext.lookup(P2PSender.QUEUE);
		System.out.println("Lookup of Queue done...");
				
		// Create a JMS connection
		QueueConnection queueConnection = queueConnectionFactory
						.createQueueConnection();
		System.out.println("Connection available...");
		
		// Creating Session object
		QueueSession queueSession = queueConnection.createQueueSession(false,
				Session.AUTO_ACKNOWLEDGE);
		System.out.println("Session is ready...");
		
		//Starting the Connection
		queueConnection.start();

		//Creating Subscriber and sending a message
		P2PSender sender = new P2PSender();
		System.out.println("Sender is ready to send...");
		sender.sendMessage("---Hello from P2PSender---",queueSession,queue);
				
		System.out.println("----Exiting JMS P2PSender----");
	}
	
	@Override
	public void onMessage(Message message) {
		ObjectMessage objectMessage = (ObjectMessage) message;
		try{
			P2PApp01 app01 = (P2PApp01) objectMessage;
			System.out.println("Sender: " + app01.getName());
			System.out.println("Message: " + app01.getMessage());
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	// Specifying the JNDI properties specific to vendor
	public static Context getInitialContext() throws NamingException{
		Properties props = new Properties();
		props.setProperty("java.naming.factory.initial","com.sun.enterprise.naming.SerialInitContextFactory");
		props.setProperty("java.naming.factory.url.pkgs","com.sun.enterprise.naming");
		props.setProperty("java.naming.provider.url","http://localhost:4848");
		Context context = new InitialContext(props);
		return context;
	}

}
